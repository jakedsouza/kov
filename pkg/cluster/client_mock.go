///////////////////////////////////////////////////////////////////////
// Copyright (C) 2017 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
// Automatically generated by MockGen. DO NOT EDIT!
// Source: pkg/cluster/client.go

package cluster

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/supervised-io/kov/gen/models"
)

// Mock of ClusterAPI interface
type MockClusterAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockClusterAPIRecorder
}

// Recorder for MockClusterAPI (not exported)
type _MockClusterAPIRecorder struct {
	mock *MockClusterAPI
}

func NewMockClusterAPI(ctrl *gomock.Controller) *MockClusterAPI {
	mock := &MockClusterAPI{ctrl: ctrl}
	mock.recorder = &_MockClusterAPIRecorder{mock}
	return mock
}

func (_m *MockClusterAPI) EXPECT() *_MockClusterAPIRecorder {
	return _m.recorder
}

func (_m *MockClusterAPI) CreateCluster(_param0 *models.ClusterConfig) (*string, error) {
	ret := _m.ctrl.Call(_m, "CreateCluster", _param0)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClusterAPIRecorder) CreateCluster(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateCluster", arg0)
}

func (_m *MockClusterAPI) GetTaskStatus(_param0 string) (bool, error) {
	ret := _m.ctrl.Call(_m, "GetTaskStatus", _param0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClusterAPIRecorder) GetTaskStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetTaskStatus", arg0)
}
