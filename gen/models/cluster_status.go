///////////////////////////////////////////////////////////////////////
// Copyright (C) 2017 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClusterStatus the status of the cluster
// swagger:model clusterStatus
type ClusterStatus string

const (
	// ClusterStatusActive captures enum value "active"
	ClusterStatusActive ClusterStatus = "active"
	// ClusterStatusInactive captures enum value "inactive"
	ClusterStatusInactive ClusterStatus = "inactive"
	// ClusterStatusError captures enum value "error"
	ClusterStatusError ClusterStatus = "error"
)

// for schema
var clusterStatusEnum []interface{}

func init() {
	var res []ClusterStatus
	if err := json.Unmarshal([]byte(`["active","inactive","error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterStatusEnum = append(clusterStatusEnum, v)
	}
}

func (m ClusterStatus) validateClusterStatusEnum(path, location string, value ClusterStatus) error {
	if err := validate.Enum(path, location, value, clusterStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster status
func (m ClusterStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
