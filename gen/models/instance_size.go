package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// InstanceSize The sizes for an instance:
//
// * small: 1 cpu, 1Gb
// * medium: 2 cpu, 2Gb
// * large: 4 cpu, 8Gb
// * huge: 8 cpu, 32Gb
// * ginormous: 16cpu, 64Gb
//
// swagger:model instanceSize
type InstanceSize string

const (
	// InstanceSizeSmall captures enum value "small"
	InstanceSizeSmall InstanceSize = "small"
	// InstanceSizeMedium captures enum value "medium"
	InstanceSizeMedium InstanceSize = "medium"
	// InstanceSizeLarge captures enum value "large"
	InstanceSizeLarge InstanceSize = "large"
	// InstanceSizeHuge captures enum value "huge"
	InstanceSizeHuge InstanceSize = "huge"
	// InstanceSizeGinormous captures enum value "ginormous"
	InstanceSizeGinormous InstanceSize = "ginormous"
)

// for schema
var instanceSizeEnum []interface{}

func init() {
	var res []InstanceSize
	if err := json.Unmarshal([]byte(`["small","medium","large","huge","ginormous"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceSizeEnum = append(instanceSizeEnum, v)
	}
}

func (m InstanceSize) validateInstanceSizeEnum(path, location string, value InstanceSize) error {
	if err := validate.Enum(path, location, value, instanceSizeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this instance size
func (m InstanceSize) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInstanceSizeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
