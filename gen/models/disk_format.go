///////////////////////////////////////////////////////////////////////
// Copyright (C) 2017 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DiskFormat disk format
// swagger:model diskFormat
type DiskFormat string

const (
	// DiskFormatThin captures enum value "thin"
	DiskFormatThin DiskFormat = "thin"
	// DiskFormatZeroedthink captures enum value "zeroedthink"
	DiskFormatZeroedthink DiskFormat = "zeroedthink"
	// DiskFormatEagerzeroedthick captures enum value "eagerzeroedthick"
	DiskFormatEagerzeroedthick DiskFormat = "eagerzeroedthick"
)

// for schema
var diskFormatEnum []interface{}

func init() {
	var res []DiskFormat
	if err := json.Unmarshal([]byte(`["thin","zeroedthink","eagerzeroedthick"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		diskFormatEnum = append(diskFormatEnum, v)
	}
}

func (m DiskFormat) validateDiskFormatEnum(path, location string, value DiskFormat) error {
	if err := validate.Enum(path, location, value, diskFormatEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this disk format
func (m DiskFormat) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDiskFormatEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
