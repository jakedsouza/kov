///////////////////////////////////////////////////////////////////////
// Copyright (C) 2017 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Credentials credentials
// swagger:model credentials
type Credentials struct {

	// password
	// Required: true
	// Min Length: 6
	Password strfmt.Password `json:"password"`

	// username
	// Required: true
	// Min Length: 1
	Username string `json:"username"`
}

// Validate validates this credentials
func (m *Credentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Credentials) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("password", "body", strfmt.Password(m.Password)); err != nil {
		return err
	}

	if err := validate.MinLength("password", "body", string(m.Password), 6); err != nil {
		return err
	}

	return nil
}

func (m *Credentials) validateUsername(formats strfmt.Registry) error {

	if err := validate.RequiredString("username", "body", string(m.Username)); err != nil {
		return err
	}

	if err := validate.MinLength("username", "body", string(m.Username), 1); err != nil {
		return err
	}

	return nil
}
