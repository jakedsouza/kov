///////////////////////////////////////////////////////////////////////
// Copyright (C) 2017 VMware, Inc. All rights reserved.
// -- VMware Confidential
///////////////////////////////////////////////////////////////////////
package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TaskState task state
// swagger:model taskState
type TaskState string

const (
	// TaskStateProcessing captures enum value "processing"
	TaskStateProcessing TaskState = "processing"
	// TaskStateCompleted captures enum value "completed"
	TaskStateCompleted TaskState = "completed"
	// TaskStateFailed captures enum value "failed"
	TaskStateFailed TaskState = "failed"
)

// for schema
var taskStateEnum []interface{}

func init() {
	var res []TaskState
	if err := json.Unmarshal([]byte(`["processing","completed","failed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		taskStateEnum = append(taskStateEnum, v)
	}
}

func (m TaskState) validateTaskStateEnum(path, location string, value TaskState) error {
	if err := validate.Enum(path, location, value, taskStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this task state
func (m TaskState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTaskStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
