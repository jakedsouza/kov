package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/supervised-io/kov/gen/models"
)

// UpdateClusterReader is a Reader for the UpdateCluster structure.
type UpdateClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateClusterNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUpdateClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateClusterNoContent creates a UpdateClusterNoContent with default headers values
func NewUpdateClusterNoContent() *UpdateClusterNoContent {
	return &UpdateClusterNoContent{}
}

/*UpdateClusterNoContent handles this case with default header values.

update cluster task has been accepted
*/
type UpdateClusterNoContent struct {
	Payload models.TaskID
}

func (o *UpdateClusterNoContent) Error() string {
	return fmt.Sprintf("[PUT /clusters][%d] updateClusterNoContent  %+v", 204, o.Payload)
}

func (o *UpdateClusterNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterNotFound creates a UpdateClusterNotFound with default headers values
func NewUpdateClusterNotFound() *UpdateClusterNotFound {
	return &UpdateClusterNotFound{}
}

/*UpdateClusterNotFound handles this case with default header values.

The cluster was not found
*/
type UpdateClusterNotFound struct {
	Payload *models.Error
}

func (o *UpdateClusterNotFound) Error() string {
	return fmt.Sprintf("[PUT /clusters][%d] updateClusterNotFound  %+v", 404, o.Payload)
}

func (o *UpdateClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterDefault creates a UpdateClusterDefault with default headers values
func NewUpdateClusterDefault(code int) *UpdateClusterDefault {
	return &UpdateClusterDefault{
		_statusCode: code,
	}
}

/*UpdateClusterDefault handles this case with default header values.

Error
*/
type UpdateClusterDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update cluster default response
func (o *UpdateClusterDefault) Code() int {
	return o._statusCode
}

func (o *UpdateClusterDefault) Error() string {
	return fmt.Sprintf("[PUT /clusters][%d] updateCluster default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
